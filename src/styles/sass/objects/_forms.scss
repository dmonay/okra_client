/**
 * Form Element Styling
 */

$form-input-padding: $padding-base !default;
$form-input-line-height: 1.25 !default;
$form-input-background: #fff !default;
$form-input-border: $color-gray-lighter !default;
$form-input-border-radius: $border-radius-default !default;

fieldset {
    padding: 0;
    margin: 0;
    border: 0;
    min-width: 0;
}

label {
    display: inline-block;
    max-width: 100%;
    margin-bottom: 5px;
}

.form-control-feedback {
    position: absolute;
    top: 2px;
    right: 16px;
    cursor: pointer;
    z-index: 2;
    display: block;
    width: 38px;
    height: 36px;
    text-align: center;
    padding: 8px;
    background-color: $form-input-background;
}

input[type="search"] {
    box-sizing: border-box;
}

input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    margin-top: 1px \9; // IE8-9
    line-height: normal;
}

input[type="file"] {
    display: block;
}

input[type="range"] {
    display: block;
    width: 100%;
}

select[multiple],
select[size] {
    height: auto;
}

.form-header {
    margin-top: $margin-base;
    margin-bottom: $margin-base;
    .form-lead {
        margin-top: $margin-base / 2;
    }
}

//NOT SURE WHERE .row .form-group is being reset but this overrides that reset.
.row .form-group {
    margin-bottom: 10px;
    margin-left: 0;
    margin-right: 0;
}

.form-group {
    @extend .row;

    margin-left: 0;
    margin-right: 0;
    max-width: none;
    margin-bottom: 10px;

    .form-input {
        border-width: 2px;
        height: 40px;
    }

    .form-input:focus {
        border-color: $color-info;
        transition: border .25s linear, color .25s linear, background-color .25s linear;
        border-width: 2px;
    }

    .input-error {
        display: none;
    }

    .control-label {
        padding-top: $padding-base;
        padding-left: 0;
        padding-right: 0;
        display: block;
    }

    select {
        width: 100%;

        &.form-control {
            display: block;
            width: 100%;
            height: 40px;
            background-color: #fff;
            line-height: $font-base-line-height;
            padding: $form-input-padding;
            border: 2px solid $form-input-border;
            border-radius: $form-input-border-radius;
            transition: border .25s linear, color .25s linear, background-color .25s linear;
        }

        &.form-control:focus {
            border-color: $color-info;
            transition: border .25s linear, color .25s linear, background-color .25s linear;
            border-width: 2px;
        }
    }
}

.has-success {
    .form-input:focus {
        border-color: $color-success;
        transition: border .25s linear, color .25s linear, background-color .25s linear;
        border-width: 2px;
    }

    label {
        color: $color-success;
        font-weight: bold;
    }
}

.has-error {
    .form-input:focus {
        border-color: $color-danger;
    }

    label {
        color: $color-danger;
        font-weight: bold;
    }

    input {
        border-color: $color-danger;
    }

    input,
    .btn {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

    .input-hint {
        display: none;
    }

    .input-error {
        display: inline-block;
        width: 100%;
        padding: ($form-input-padding / 2) ($form-input-padding);
        margin: 0;
        background-color: $color-danger;
        color: #fff;
        border-bottom-left-radius: $form-input-border-radius;
        border-bottom-right-radius: $form-input-border-radius;
    }

    label + .input-error,
    select + .input-error {
      border-top-left-radius: $form-input-border-radius;
      border-top-right-radius: $form-input-border-radius;
    }
}

.form-input {
    display: block;
    width: 100%;
    padding: $form-input-padding;
    border: 1px solid $form-input-border;
    background-color: $form-input-background;
    font-size: $font-base-size;
    line-height: $form-input-line-height;

    @if ($form-input-border-radius != 0) {
        border-radius: $form-input-border-radius;
    }

    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        cursor: not-allowed;
        background-color: #f0f0f0;
        opacity: 1;
    }
}

textarea.form-input {
    height: auto;
}

.input-hint {
    padding-top: $form-input-padding / 2;
    color: $color-grey;
    font-size: 12px;
}

.radio,
.checkbox {
    display: block;
    min-height: $font-base-line-height; // clear the floating input if there is no label text
    margin-top: 10px;
    margin-bottom: 10px;

    label {
      padding-left: 20px;
      margin-bottom: 0;
      font-weight: normal;
      cursor: pointer;
    }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
    float: left;
    margin-left: -20px;
}

.radio + .radio,
.checkbox + .checkbox {
    margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
    display: inline-block;
    padding-left: 20px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
    margin-top: 0;
    margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"],
.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }
}

.input-addon-left,
.input-addon-right {
    .btn {
        padding: $form-input-padding;
        width: 100%;
        margin: 0;
    }
}

.input-addon-right, {
  padding-left: 0;

  .btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

.input-addon-left {
  padding-right: 0;

  .btn {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}

.input--no-right-radius {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.input--no-left-radius {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.stack-vertical {
    @include respond-max ($break-lap) {
        width: 50%;
        position: relative;
        float: left;
    }
}

.form-control-static {
    padding-top: $padding-base;
}

.form-inline {
    button {
        width: 100%;
        margin-bottom: $margin-base / 2;

        &:last-of-type {
            margin-bottom: 0;
        }
    }

    select {
        width: 100%;
    }

    // Kick in the inline
    @include respond-min($break-lap) {
        .control-label {
            @include respond-min ($break-lap) {
              text-align: right;
            }
        }

        // Inline-block all the things for "inline"
        .form-group {
            vertical-align: middle;
        }

        .form-input {
            padding-right: 0;
        }

        // In navbar-form, allow folks to *not* use `.form-group`
        .form-control {
            display: inline-block;
            width: auto; // Prevent labels from stacking above inputs in `.form-group`
            vertical-align: middle;
        }

        .input-group {
            display: inline-table;
            vertical-align: middle;

            input[type="radio"],
            input[type="checkbox"] {
              margin-right: 10px;
            }

            .input-group-addon,
            .input-group-btn,
            .form-control {
              width: auto;
            }
        }
        // Input groups need that 100% width though
        .input-group > .form-control {
            width: 100%;
        }

        // Remove default margin on radios/checkboxes that were used for stacking, and
        // then undo the floating of radios and checkboxes to match (which also avoids
        // a bug in WebKit: https://github.com/twbs/bootstrap/issues/1969).
        .radio,
        .checkbox {
            display: inline-block;
            margin-top: 0;
            margin-bottom: 0;
            padding-left: 0;
            vertical-align: middle;
        }
        .radio input[type="radio"],
        .checkbox input[type="checkbox"] {
            float: none;
            margin-left: 0;
        }

        // Validation states
        //
        // Reposition the icon because it's now within a grid column and columns have
        // `position: relative;` on them. Also accounts for the grid gutter padding.
        .has-feedback .form-control-feedback {
            top: 0;
        }
    }
}
